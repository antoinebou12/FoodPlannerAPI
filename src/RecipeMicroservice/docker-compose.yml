version: '3.8'

services:

  recipemicroservice:
    build: .
    ports:
      - "5000:80"
      - "5001:443"
      - "1234:1234"
    depends_on:
      - db
      - redis
      - prometheus
    environment:
      - ConnectionStrings__DefaultConnection=Server=db;Database=recipedb;User=sa;Password=Your_password123;
      - ASPNETCORE_ENVIRONMENT=Development
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:80/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    container_name: recipemicroservice

  db:
    image: mysql:8.0.21
    environment:
      - MYSQL_ROOT_PASSWORD=Your_password123
      - MYSQL_DATABASE=recipedb
      - MYSQL_USER=sa
      - MYSQL_PASSWORD=Your_password123
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - dbdata:/var/lib/mysql
    container_name: db

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    container_name: redis
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./Monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:9090" ]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - prometheus

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      - COLLECTOR_OTLP_ENABLED=true
    container_name: jaeger
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:16686" ]
      interval: 30s
      timeout: 10s
      retries: 3

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    container_name: zookeeper
    healthcheck:
      test: ["CMD", "zookeeper-shell", "localhost:2181", "ls", "/"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    container_name: kafka
    healthcheck:
      test: ["CMD", "kafkacat", "-b", "localhost:9092", "-L"]
      interval: 30s
      timeout: 10s
      retries: 3

  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - ./homarr/configs:/app/data/configs
      - ./homarr/icons:/app/public/icons
    ports:
      - '7575:7575'

volumes:
  dbdata:
  grafana-storage:
  homarr-data:
